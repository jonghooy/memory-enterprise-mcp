version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: memory-agent-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: memory_agent
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Caching and Celery
  redis:
    image: redis:7-alpine
    container_name: memory-agent-redis
    command: redis-server --appendonly yes --port 6380
    ports:
      - "6380:6380"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database (for development)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: memory-agent-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
      target: development
    container_name: memory-agent-api
    env_file:
      - .env
    ports:
      - "8005:8000"
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
      target: development
    container_name: memory-agent-celery
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A src.services.tasks worker --loglevel=info --concurrency=2

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
      target: development
    container_name: memory-agent-beat
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A src.services.tasks beat --loglevel=info

  # Flower (Celery Monitoring)
  flower:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile
      target: development
    container_name: memory-agent-flower
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A src.services.tasks flower --port=5555

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

networks:
  default:
    name: memory-agent-network